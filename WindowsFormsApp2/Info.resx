<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>