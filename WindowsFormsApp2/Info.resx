<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>